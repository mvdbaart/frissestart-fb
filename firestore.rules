
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functie om te checken of een gebruiker admin is
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || isAdmin());
      // Overweeg validatie voor data die een gebruiker naar zijn eigen profiel mag schrijven.
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if resource.data.isApproved == true || isAdmin();
      
      allow create: if request.auth != null
                    // Basisvalidatie voor inkomende data:
                    && request.resource.data.rating >= 0 && request.resource.data.rating <= 10 // Interne schaal (0-10)
                    && request.resource.data.reviewer_name is string && request.resource.data.reviewer_name.size() > 0
                    && request.resource.data.title is string && request.resource.data.title.size() > 0
                    && request.resource.data.review_text is string && request.resource.data.review_text.size() > 0
                    && request.resource.data.date is string 
                    && request.resource.data.createdAt == request.time
                    // Gebruikers mogen niet zelf de review goedkeuren bij aanmaak.
                    // isApproved moet null (nog niet gemodereerd) of false zijn.
                    && (request.resource.data.isApproved == null || request.resource.data.isApproved == false);

      allow update: if isAdmin()
                    // Optioneel: specificeer welke velden een admin mag updaten, bijv.
                    // && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isApproved', 'response', 'updatedAt'])
                    // && (request.resource.data.isApproved is bool || request.resource.data.isApproved == null)
                    // && (request.resource.data.response is string || request.resource.data.response == null)
                    // && request.resource.data.updatedAt == request.time;
                    ; 
      allow delete: if isAdmin();
    }

    // Courses collection
    match /courses/{courseId} {
      // Iedereen mag cursusinformatie lezen.
      allow read: if true; // Voor publieke weergave van cursussen.
      
      // TIJDELIJKE REGEL VOOR SEEDING: STA CREATIE TOE ZONDER AUTHENTICATIE.
      // DIT IS ONVEILIG VOOR PRODUCTIE EN MOET DIRECT NA HET SEEDEN WORDEN TERUGGEZET NAAR:
      // allow create: if isAdmin()
      //               && request.resource.data.cursusNaam is string && request.resource.data.cursusNaam.size() > 0
      //               && request.resource.data.verkoopprijs is number && request.resource.data.verkoopprijs >= 0
      //               && request.resource.data.datum is timestamp
      //               && request.resource.data.createdAt == request.time
      //               && request.resource.data.updatedAt == request.time;
      allow create: if true; 

      allow update: if isAdmin()
                    // Basis validatie voor update:
                    // && request.resource.data.cursusNaam is string && request.resource.data.cursusNaam.size() > 0
                    // && request.resource.data.verkoopprijs is number && request.resource.data.verkoopprijs >= 0
                    // && request.resource.data.datum is timestamp
                    // && request.resource.data.updatedAt == request.time
                    ;
      allow delete: if isAdmin();
    }
  }
}
